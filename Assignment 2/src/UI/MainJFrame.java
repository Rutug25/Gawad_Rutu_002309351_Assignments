/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Model.Person;
import Model.PersonDirectory;
import UI.PersonManager.AddPerson_JPanel;
import UI.PersonManager.ListPerson_JPanel;
import UI.PersonManager.ViewPerson_JPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author rutugawad
 */
public class MainJFrame extends javax.swing.JFrame {
    PersonDirectory PersonList;

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        PersonList = new PersonDirectory();
       
       //Intialising 5 person's data at the App startup
       populateData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        LeftComponent = new javax.swing.JPanel();
        AddPerson_Button = new javax.swing.JButton();
        ListPerson_Button = new javax.swing.JButton();
        SearchPerson_Button = new javax.swing.JButton();
        Search_Text = new javax.swing.JTextField();
        UserProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddPerson_Button.setText("Add Person");
        AddPerson_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPerson_ButtonActionPerformed(evt);
            }
        });

        ListPerson_Button.setText("List Person");
        ListPerson_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListPerson_ButtonActionPerformed(evt);
            }
        });

        SearchPerson_Button.setText("Search Person");
        SearchPerson_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPerson_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LeftComponentLayout = new javax.swing.GroupLayout(LeftComponent);
        LeftComponent.setLayout(LeftComponentLayout);
        LeftComponentLayout.setHorizontalGroup(
            LeftComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftComponentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeftComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SearchPerson_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Search_Text)
                    .addComponent(ListPerson_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddPerson_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LeftComponentLayout.setVerticalGroup(
            LeftComponentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftComponentLayout.createSequentialGroup()
                .addContainerGap(177, Short.MAX_VALUE)
                .addComponent(AddPerson_Button)
                .addGap(18, 18, 18)
                .addComponent(ListPerson_Button)
                .addGap(79, 79, 79)
                .addComponent(Search_Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchPerson_Button)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        SplitPane.setLeftComponent(LeftComponent);

        UserProcessContainer.setLayout(new java.awt.CardLayout());
        SplitPane.setRightComponent(UserProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SplitPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddPerson_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPerson_ButtonActionPerformed
        AddPerson_JPanel addperson_panel = new AddPerson_JPanel(UserProcessContainer,PersonList);
        UserProcessContainer.add("AddPerson_JPanel",addperson_panel);
        
        CardLayout layout = (CardLayout)UserProcessContainer.getLayout();
        layout.next(UserProcessContainer);  
    }//GEN-LAST:event_AddPerson_ButtonActionPerformed

    private void ListPerson_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListPerson_ButtonActionPerformed
        ListPerson_JPanel listperson_panel = new ListPerson_JPanel(UserProcessContainer,PersonList);
        UserProcessContainer.add("ListPerson_JPanel",listperson_panel);
        
        CardLayout layout = (CardLayout)UserProcessContainer.getLayout();
        layout.next(UserProcessContainer);        
    }//GEN-LAST:event_ListPerson_ButtonActionPerformed

    private void SearchPerson_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPerson_ButtonActionPerformed
        String search = Search_Text.getText();
        Person result = PersonList.searchPerson(Search_Text.getText());
        if (result == null){
            JOptionPane.showMessageDialog(null, "Does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
            
        }
        else {
            ViewPerson_JPanel viewperson_panel = new ViewPerson_JPanel(UserProcessContainer,PersonList,result);
            UserProcessContainer.add("ViewPerson_JPanel",viewperson_panel);
        
            CardLayout layout = (CardLayout)UserProcessContainer.getLayout();
            layout.next(UserProcessContainer);
            
           
        }
         Search_Text.setText("");   
    }//GEN-LAST:event_SearchPerson_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddPerson_Button;
    private javax.swing.JPanel LeftComponent;
    private javax.swing.JButton ListPerson_Button;
    private javax.swing.JButton SearchPerson_Button;
    private javax.swing.JTextField Search_Text;
    private javax.swing.JSplitPane SplitPane;
    private javax.swing.JPanel UserProcessContainer;
    // End of variables declaration//GEN-END:variables

    private void populateData() {
        Person p1 = PersonList.addPerson();
        
        p1.setFirstName("Rutu");
        p1.setLastName("Gawad");
        p1.setSSN("123456789");
        p1.setAge(23);
        p1.getHomeAddress().setStreet("Highland Ave");
        p1.getHomeAddress().setCity("Boston"); 
        p1.getHomeAddress().setState("Massachusetts");
        p1.getHomeAddress().setZIP("02119");
        p1.getHomeAddress().setUnitNumber("24");
        p1.getHomeAddress().setPhoneNumber("123456789");
        p1.getWorkAddress().setCity("New York");
        p1.getWorkAddress().setState("New York");
        p1.getWorkAddress().setStreet("Circuit Street");
        p1.getWorkAddress().setUnitNumber("10");
        p1.getWorkAddress().setZIP("123456");
        p1.getWorkAddress().setPhoneNumber("123456789");
                        
        Person p2 = PersonList.addPerson();
 
        p2.setFirstName("Emily");
        p2.setLastName("Doe");
        p2.setSSN("456786654");
        p2.setAge(30);
        p2.getHomeAddress().setStreet("Stuart St");
        p2.getHomeAddress().setCity("San Francisco"); 
        p2.getHomeAddress().setState("California");
        p2.getHomeAddress().setZIP("12345");
        p2.getHomeAddress().setUnitNumber("45");
        p2.getWorkAddress().setCity("Salt Lake City");
        p2.getWorkAddress().setState("Utah");
        p2.getWorkAddress().setStreet("Cambridge St");
        p2.getWorkAddress().setUnitNumber("39");
        p2.getWorkAddress().setZIP("12345");
        p2.getWorkAddress().setPhoneNumber("123456789");
        p2.getHomeAddress().setPhoneNumber("123456789");
        
        Person p3 = PersonList.addPerson();
 
        p3.setFirstName("John");
        p3.setLastName("Clarkson");
        p3.setSSN("127455874");
        p3.setAge(38);
        p3.getHomeAddress().setStreet("Kendall St");
        p3.getHomeAddress().setCity("Miami"); 
        p3.getHomeAddress().setState("Florida");
        p3.getHomeAddress().setZIP("12345");
        p3.getHomeAddress().setUnitNumber("56");
        p3.getWorkAddress().setCity("Miami");
        p3.getWorkAddress().setState("Florida");
        p3.getWorkAddress().setStreet("Tremont St");
        p3.getWorkAddress().setUnitNumber("10");
        p3.getWorkAddress().setZIP("12345");
        p3.getWorkAddress().setPhoneNumber("123456789");
        p3.getHomeAddress().setPhoneNumber("123456789");
        
        Person p4 = PersonList.addPerson();
 
        p4.setFirstName("Cristian");
        p4.setLastName("Smith");
        p4.setSSN("123465234");
        p4.setAge(25);
        p4.getHomeAddress().setStreet("Lowell St");
        p4.getHomeAddress().setCity("Seattle"); 
        p4.getHomeAddress().setState("Washington");
        p4.getHomeAddress().setZIP("12345");
        p4.getHomeAddress().setUnitNumber("45");
        p4.getWorkAddress().setCity("Seattle");
        p4.getWorkAddress().setState("Washington");
        p4.getWorkAddress().setStreet("Random St");
        p4.getWorkAddress().setUnitNumber("67");
        p4.getWorkAddress().setZIP("12345");
        p4.getWorkAddress().setPhoneNumber("123456789");
        p4.getHomeAddress().setPhoneNumber("123456789");
        
        
        Person p5 = PersonList.addPerson();
 
        p5.setFirstName("Saloni");
        p5.setLastName("Dixit");
        p5.setSSN("243779789");
        p5.setAge(38);
        p5.getHomeAddress().setStreet("Dudley St");
        p5.getHomeAddress().setCity("Mumbai"); 
        p5.getHomeAddress().setState("Maharashtra");
        p5.getHomeAddress().setZIP("400101");
        p5.getHomeAddress().setUnitNumber("45");
        p5.getWorkAddress().setCity("Mumbai");
        p5.getWorkAddress().setState("Maharashtra");
        p5.getWorkAddress().setStreet("Shimpoli");
        p5.getWorkAddress().setUnitNumber("100");
        p5.getWorkAddress().setZIP("400101");
        p5.getWorkAddress().setPhoneNumber("123456789");
        p5.getHomeAddress().setPhoneNumber("123456789");
        
    }
}
