/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.PersonManager;
import Model.Person;
import Model.PersonDirectory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author rutugawad
 */
public class ListPerson_JPanel extends javax.swing.JPanel {
    PersonDirectory PersonList;

    /**
     * Creates new form ListPerson_JPanel
     */
    public ListPerson_JPanel(PersonDirectory PersonList) {
        initComponents();
        this.PersonList = PersonList;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back_Button = new javax.swing.JButton();
        ListOfPerson_Title = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        Person_Table = new javax.swing.JTable();
        ViewDetails_Button = new javax.swing.JButton();
        Delete_Button = new javax.swing.JButton();

        Back_Button.setText(">>>Back");

        ListOfPerson_Title.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        ListOfPerson_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ListOfPerson_Title.setText("List of Persons");

        Person_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Home City", "Home ZIP Code", "Work City", "Work ZIP Code"
            }
        ));
        ScrollPane.setViewportView(Person_Table);

        ViewDetails_Button.setText("View Details");

        Delete_Button.setText("Delete");
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ListOfPerson_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ViewDetails_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(Delete_Button))
                    .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Delete_Button, ViewDetails_Button});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_Button)
                    .addComponent(ListOfPerson_Title))
                .addGap(78, 78, 78)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewDetails_Button)
                    .addComponent(Delete_Button))
                .addContainerGap(212, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
                // TODO add your handling code here:
    }//GEN-LAST:event_Delete_ButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back_Button;
    private javax.swing.JButton Delete_Button;
    private javax.swing.JLabel ListOfPerson_Title;
    private javax.swing.JTable Person_Table;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton ViewDetails_Button;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) Person_Table.getModel();
            
        model.setRowCount(0);
        
        for(Person p : PersonList.getPersonList())
        {
            
            
            Object[] row = new Object[6];
            row[0] = p;
            row[1] = p.getLastName();
            row[2] = p.getHomeAddress().getCity();
            row[3] = p.getHomeAddress().getZIP();
            row[4] = p.getWorkAddress().getCity();
            row[5] = p.getWorkAddress().getZIP();
            
            model.addRow(row);
            
        }
       
  
    }
}
